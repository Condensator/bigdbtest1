SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[SaveReceiptApplicationReceivableDetail]
(
 @val [dbo].[ReceiptApplicationReceivableDetail] READONLY
)
AS
SET NOCOUNT ON;
DECLARE @Output TABLE(
 [Action] NVARCHAR(10) NOT NULL,
 [Id] bigint NOT NULL,
 [Token] int NOT NULL,
 [RowVersion] BIGINT,
 [OldRowVersion] BIGINT
)
MERGE [dbo].[ReceiptApplicationReceivableDetails] With (ForceSeek) AS T
USING (SELECT * FROM @val) AS S
		ON ( T.Id = S.Id)
WHEN MATCHED THEN
	UPDATE SET [AdjustedWithHoldingTax_Amount]=S.[AdjustedWithHoldingTax_Amount],[AdjustedWithHoldingTax_Currency]=S.[AdjustedWithHoldingTax_Currency],[AmountApplied_Amount]=S.[AmountApplied_Amount],[AmountApplied_Currency]=S.[AmountApplied_Currency],[BookAmountApplied_Amount]=S.[BookAmountApplied_Amount],[BookAmountApplied_Currency]=S.[BookAmountApplied_Currency],[GainAmount_Amount]=S.[GainAmount_Amount],[GainAmount_Currency]=S.[GainAmount_Currency],[IsActive]=S.[IsActive],[IsGLPosted]=S.[IsGLPosted],[IsReApplication]=S.[IsReApplication],[IsTaxGLPosted]=S.[IsTaxGLPosted],[LeaseComponentAmountApplied_Amount]=S.[LeaseComponentAmountApplied_Amount],[LeaseComponentAmountApplied_Currency]=S.[LeaseComponentAmountApplied_Currency],[LeaseComponentPrepaidAmount_Amount]=S.[LeaseComponentPrepaidAmount_Amount],[LeaseComponentPrepaidAmount_Currency]=S.[LeaseComponentPrepaidAmount_Currency],[NonLeaseComponentAmountApplied_Amount]=S.[NonLeaseComponentAmountApplied_Amount],[NonLeaseComponentAmountApplied_Currency]=S.[NonLeaseComponentAmountApplied_Currency],[NonLeaseComponentPrepaidAmount_Amount]=S.[NonLeaseComponentPrepaidAmount_Amount],[NonLeaseComponentPrepaidAmount_Currency]=S.[NonLeaseComponentPrepaidAmount_Currency],[PayableId]=S.[PayableId],[PrepaidAmount_Amount]=S.[PrepaidAmount_Amount],[PrepaidAmount_Currency]=S.[PrepaidAmount_Currency],[PrepaidTaxAmount_Amount]=S.[PrepaidTaxAmount_Amount],[PrepaidTaxAmount_Currency]=S.[PrepaidTaxAmount_Currency],[PreviousAdjustedWithHoldingTax_Amount]=S.[PreviousAdjustedWithHoldingTax_Amount],[PreviousAdjustedWithHoldingTax_Currency]=S.[PreviousAdjustedWithHoldingTax_Currency],[PreviousAmountApplied_Amount]=S.[PreviousAmountApplied_Amount],[PreviousAmountApplied_Currency]=S.[PreviousAmountApplied_Currency],[PreviousBookAmountApplied_Amount]=S.[PreviousBookAmountApplied_Amount],[PreviousBookAmountApplied_Currency]=S.[PreviousBookAmountApplied_Currency],[PreviousTaxApplied_Amount]=S.[PreviousTaxApplied_Amount],[PreviousTaxApplied_Currency]=S.[PreviousTaxApplied_Currency],[PrevLeaseComponentAmountApplied_Amount]=S.[PrevLeaseComponentAmountApplied_Amount],[PrevLeaseComponentAmountApplied_Currency]=S.[PrevLeaseComponentAmountApplied_Currency],[PrevNonLeaseComponentAmountApplied_Amount]=S.[PrevNonLeaseComponentAmountApplied_Amount],[PrevNonLeaseComponentAmountApplied_Currency]=S.[PrevNonLeaseComponentAmountApplied_Currency],[ReceiptApplicationInvoiceId]=S.[ReceiptApplicationInvoiceId],[ReceiptApplicationReceivableGroupId]=S.[ReceiptApplicationReceivableGroupId],[ReceivableDetailId]=S.[ReceivableDetailId],[ReceivableInvoiceId]=S.[ReceivableInvoiceId],[ReceivedAmount_Amount]=S.[ReceivedAmount_Amount],[ReceivedAmount_Currency]=S.[ReceivedAmount_Currency],[ReceivedTowardsInterest_Amount]=S.[ReceivedTowardsInterest_Amount],[ReceivedTowardsInterest_Currency]=S.[ReceivedTowardsInterest_Currency],[RecoveryAmount_Amount]=S.[RecoveryAmount_Amount],[RecoveryAmount_Currency]=S.[RecoveryAmount_Currency],[SundryPayableId]=S.[SundryPayableId],[SundryReceivableId]=S.[SundryReceivableId],[TaxApplied_Amount]=S.[TaxApplied_Amount],[TaxApplied_Currency]=S.[TaxApplied_Currency],[UpdatedById]=S.[UpdatedById],[UpdatedTime]=S.[UpdatedTime],[UpfrontTaxSundryId]=S.[UpfrontTaxSundryId],[WithHoldingTaxBookAmountApplied_Amount]=S.[WithHoldingTaxBookAmountApplied_Amount],[WithHoldingTaxBookAmountApplied_Currency]=S.[WithHoldingTaxBookAmountApplied_Currency]
WHEN NOT MATCHED THEN
	INSERT ([AdjustedWithHoldingTax_Amount],[AdjustedWithHoldingTax_Currency],[AmountApplied_Amount],[AmountApplied_Currency],[BookAmountApplied_Amount],[BookAmountApplied_Currency],[CreatedById],[CreatedTime],[GainAmount_Amount],[GainAmount_Currency],[IsActive],[IsGLPosted],[IsReApplication],[IsTaxGLPosted],[LeaseComponentAmountApplied_Amount],[LeaseComponentAmountApplied_Currency],[LeaseComponentPrepaidAmount_Amount],[LeaseComponentPrepaidAmount_Currency],[NonLeaseComponentAmountApplied_Amount],[NonLeaseComponentAmountApplied_Currency],[NonLeaseComponentPrepaidAmount_Amount],[NonLeaseComponentPrepaidAmount_Currency],[PayableId],[PrepaidAmount_Amount],[PrepaidAmount_Currency],[PrepaidTaxAmount_Amount],[PrepaidTaxAmount_Currency],[PreviousAdjustedWithHoldingTax_Amount],[PreviousAdjustedWithHoldingTax_Currency],[PreviousAmountApplied_Amount],[PreviousAmountApplied_Currency],[PreviousBookAmountApplied_Amount],[PreviousBookAmountApplied_Currency],[PreviousTaxApplied_Amount],[PreviousTaxApplied_Currency],[PrevLeaseComponentAmountApplied_Amount],[PrevLeaseComponentAmountApplied_Currency],[PrevNonLeaseComponentAmountApplied_Amount],[PrevNonLeaseComponentAmountApplied_Currency],[ReceiptApplicationId],[ReceiptApplicationInvoiceId],[ReceiptApplicationReceivableGroupId],[ReceivableDetailId],[ReceivableInvoiceId],[ReceivedAmount_Amount],[ReceivedAmount_Currency],[ReceivedTowardsInterest_Amount],[ReceivedTowardsInterest_Currency],[RecoveryAmount_Amount],[RecoveryAmount_Currency],[SundryPayableId],[SundryReceivableId],[TaxApplied_Amount],[TaxApplied_Currency],[UpfrontTaxSundryId],[WithHoldingTaxBookAmountApplied_Amount],[WithHoldingTaxBookAmountApplied_Currency])
    VALUES (S.[AdjustedWithHoldingTax_Amount],S.[AdjustedWithHoldingTax_Currency],S.[AmountApplied_Amount],S.[AmountApplied_Currency],S.[BookAmountApplied_Amount],S.[BookAmountApplied_Currency],S.[CreatedById],S.[CreatedTime],S.[GainAmount_Amount],S.[GainAmount_Currency],S.[IsActive],S.[IsGLPosted],S.[IsReApplication],S.[IsTaxGLPosted],S.[LeaseComponentAmountApplied_Amount],S.[LeaseComponentAmountApplied_Currency],S.[LeaseComponentPrepaidAmount_Amount],S.[LeaseComponentPrepaidAmount_Currency],S.[NonLeaseComponentAmountApplied_Amount],S.[NonLeaseComponentAmountApplied_Currency],S.[NonLeaseComponentPrepaidAmount_Amount],S.[NonLeaseComponentPrepaidAmount_Currency],S.[PayableId],S.[PrepaidAmount_Amount],S.[PrepaidAmount_Currency],S.[PrepaidTaxAmount_Amount],S.[PrepaidTaxAmount_Currency],S.[PreviousAdjustedWithHoldingTax_Amount],S.[PreviousAdjustedWithHoldingTax_Currency],S.[PreviousAmountApplied_Amount],S.[PreviousAmountApplied_Currency],S.[PreviousBookAmountApplied_Amount],S.[PreviousBookAmountApplied_Currency],S.[PreviousTaxApplied_Amount],S.[PreviousTaxApplied_Currency],S.[PrevLeaseComponentAmountApplied_Amount],S.[PrevLeaseComponentAmountApplied_Currency],S.[PrevNonLeaseComponentAmountApplied_Amount],S.[PrevNonLeaseComponentAmountApplied_Currency],S.[ReceiptApplicationId],S.[ReceiptApplicationInvoiceId],S.[ReceiptApplicationReceivableGroupId],S.[ReceivableDetailId],S.[ReceivableInvoiceId],S.[ReceivedAmount_Amount],S.[ReceivedAmount_Currency],S.[ReceivedTowardsInterest_Amount],S.[ReceivedTowardsInterest_Currency],S.[RecoveryAmount_Amount],S.[RecoveryAmount_Currency],S.[SundryPayableId],S.[SundryReceivableId],S.[TaxApplied_Amount],S.[TaxApplied_Currency],S.[UpfrontTaxSundryId],S.[WithHoldingTaxBookAmountApplied_Amount],S.[WithHoldingTaxBookAmountApplied_Currency])

OUTPUT $action, Inserted.Id, S.Token, Inserted.[RowVersion], Deleted.[RowVersion]
INTO @Output;

SELECT o.Id, o.Token, o.[RowVersion], CASE WHEN s.[RowVersion] <> o.[OldRowVersion] THEN 1 ELSE 0 END as ErrorCode FROM @Output o join @val s on o.Token = s.Token AND [Action] = 'UPDATE'
UNION ALL
SELECT Id, Token, [RowVersion], 0 as ErrorCode FROM @Output WHERE [Action] = 'INSERT';

GO
